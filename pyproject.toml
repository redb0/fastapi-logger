[project]
name = "fastapi-structlog"
version = "0.7.0"
description = "Structured logs and middleware for fastapi with sentry integration"
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.9,<4.0.0"
authors = [
    { name = "Vladimir Voronov", email="voronov.volodya2013@yandex.ru" },
]
keywords = [ "fastapi", "structlog", "logging" ]
dynamic = [ "classifiers" ]
dependencies = [
    "pydantic (>=2.10.6,<3.0.0)",
    "structlog (>=25.1.0,<26.0.0)",
    "orjson (>=3.10.15,<4.0.0)",
    "structlog-sentry (>=2.2.1,<3.0.0)",
    "rich (>=13.9.4,<14.0.0)",
    "pydantic-settings (>=2.7.1,<3.0.0)",
    "asgi-correlation-id (>=4.3.4,<5.0.0)",
    "sentry-sdk (>=2.21.0,<3.0.0)",
    "sqlmodel (>=0.0.22,<0.0.23)"
]


[project.urls]
homepage = "https://github.com/redb0/fastapi-logger"
repository = "https://github.com/redb0/fastapi-logger"


[tool.poetry]
package-mode = true
packages = [{ include = "fastapi_structlog" }]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: MIT License",
    "Framework :: FastAPI",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Topic :: System :: Logging",
]


[tool.poetry.group.linter.dependencies]
ruff = "^0.9.9"


[tool.poetry.group.examples.dependencies]
fastapi = "^0.111.1"
sqlalchemy = "^2.0.31"
asyncpg = "^0.29.0"
starsessions = "^2.1.3"


[tool.poetry.group.dev.dependencies]
mypy = "^1.10.1"
commitizen = "^3.27.0"


[tool.poetry.group.docs.dependencies]
mkdocs = "^1.6.1"
mkdocs-material = "^9.6.7"
mdx-include = "^1.4.2"
pygments = "^2.19.1"
pymdown-extensions = "^10.14.3"


[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "pep621"
update_changelog_on_bump = true
major_version_zero = true
version_files = [
    "fastapi_structlog/__init__.py",
]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# https://docs.astral.sh/ruff/rules/
select = ["ALL"]
ignore = [
    "D104",
    "D107",
]
line-length = 100
# target-version = "py39"


[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.ruff.lint.per-file-ignores]
"docs_src/*" = ["D100", "D101", "D103", "T201", "S104"]


[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"


[tool.ruff.lint.pylint]
max-args = 5
max-positional-args = 3


[tool.pylint]
disable = "all"
bad-names = "foo,bar,baz,toto,tutu,tata"
good-names = "x,y,i,_,main,j,k,ex,Run"
enable = ["disallowed-name", "redefined-outer-name"]

[tool.ruff.lint.isort]
section-order = [
    "future",
    "standard-library",
    "fastapi",
    "third-party",
    "first-party",
    "local-folder",
]

[tool.ruff.lint.isort.sections]
"fastapi" = ["fastapi", "starlette"]


[tool.ruff.lint.pydocstyle]
convention = "google"


[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "single"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"


[tool.mypy]
# python_version = "3.9"
plugins = ["pydantic.mypy"]
show_traceback = true
strict = true
mypy_path = "fastapi_structlog/"
# Display the codes needed for # type: ignore[code] annotations.
show_error_codes = true
# Warn of unreachable or redundant code.
warn_unreachable = true
